DEBUG=0

ifeq ($(platform),)
platform = unix
ifeq ($(shell uname -a),)
   platform = win
else ifneq ($(findstring MINGW,$(shell uname -a)),)
   platform = win
else ifneq ($(findstring Darwin,$(shell uname -a)),)
   platform = osx
else ifneq ($(findstring win,$(shell uname -a)),)
   platform = win
endif
endif

CXX        = g++
CC         = gcc

ifeq ($(platform), unix)
   TARGET := libsnes.so
   fpic := -fPIC
   SHARED := -shared -Wl,--version-script=libsnes/link.T
else ifeq ($(platform), osx)
   TARGET := libsnes.dylib
   fpic := -fPIC
   SHARED := -dynamiclib
else ifeq ($(platform), ps3)
   TARGET := libsnes.a
   CC = ppu-lv2-gcc
   CXX = ppu-lv2-g++
   AR = ppu-lv2-ar
else ifeq ($(platform), xenon)
   TARGET := libsnes.a
   CC = xenon-gcc
   CXX = xenon-g++
   AR = xenon-ar
   CFLAGS += -D__LIBXENON__ -m32
   CXXFLAGS += -D__LIBXENON__ -m32
else ifeq ($(platform), wii)
   TARGET := libsnes.a
   CC = powerpc-eabi-gcc
   CXX = powerpc-eabi-g++
   AR = powerpc-eabi-ar
   CFLAGS += -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float
   CXXFLAGS += -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float
else
   TARGET := snes.dll
   CC = gcc
   CXX = g++
   fpic := -fPIC
   LD_FLAGS := -fPIC
   SHARED := -shared -static-libgcc -static-libstdc++ -s -Wl,--version-script=libsnes/link.T
   CXXFLAGS += -D__WIN32__ -D__WIN32_LIBSNES__
endif

ifeq ($(DEBUG), 1)
CFLAGS += -O0 -g
CXXFLAGS += -O0 -g
else
CFLAGS += -O3
CXXFLAGS += -O3
endif


OBJECTS    = ./src/apu.o ./src/bsx.o ./src/c4emu.o ./src/cheats.o ./src/controls.o ./src/cpu.o ./src/cpuexec.o ./src/dsp.o ./src/fxemu.o ./src/gfx.o ./src/globals.o ./src/memmap.o ./src/obc1.o ./src/ppu.o ./src/sa1.o ./src/sdd1.o ./src/seta.o ./src/snapshot.o ./src/spc7110.o ./src/srtc.o ./src/tile.o libsnes/libsnes.o libsnes/memstream.o

INCLUDES   = -I. -I.. -I../apu/
DEFINES    = -DHAVE_STRINGS_H -DHAVE_STDINT_H -DHAVE_INTTYPES_H -D__LIBSNES__ -DRIGHTSHIFT_IS_SAR
COMMON_DEFINES += -fomit-frame-pointer -pedantic -Wall -W -Wno-unused-parameter -DNDEBUG=1 $(fpic)

CXXFLAGS    += $(COMMON_DEFINES) $(DEFINES) -fno-exceptions -fno-rtti
CFLAGS     = $(DEFINES) $(COMMON_DEFINES)

all: $(TARGET)

$(TARGET): $(OBJECTS)
ifeq ($(platform), ps3)
	$(AR) rcs $@ $(OBJECTS)
else ifeq ($(platform), xenon)
	$(AR) rcs $@ $(OBJECTS)
else ifeq ($(platform), wii)
	$(AR) rcs $@ $(OBJECTS)
else
	$(CXX) $(fpic) $(SHARED) $(INCLUDES) -o $@ $(OBJECTS) -lm
endif

%.o: %.cpp 
	$(CXX) $(INCLUDES) $(CXXFLAGS) -c -o $@ $<

%.o: %.c
	$(CC) $(INCLUDES) $(CFLAGS) -c -o $@ $<

clean:
	rm -f $(OBJECTS) $(TARGET)

.PHONY: clean

